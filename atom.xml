<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://wtingfeng.github.io</id>
    <title>Gridea</title>
    <updated>2020-07-02T04:07:47.074Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://wtingfeng.github.io"/>
    <link rel="self" href="https://wtingfeng.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://wtingfeng.github.io/images/avatar.png</logo>
    <icon>https://wtingfeng.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, Gridea</rights>
    <entry>
        <title type="html"><![CDATA[算法-括号配对问题]]></title>
        <id>https://wtingfeng.github.io/post/suan-fa-gua-hao-pei-dui-wen-ti/</id>
        <link href="https://wtingfeng.github.io/post/suan-fa-gua-hao-pei-dui-wen-ti/">
        </link>
        <updated>2020-07-02T02:54:06.000Z</updated>
        <content type="html"><![CDATA[<p>题目描述：给出一个仅包含字符'(',')','{','}','['和']',的字符串，判断给出的字符串是否是合法的括号序列。括号必须以正确的顺序关闭，&quot;()&quot;,&quot;()[]{}&quot;和&quot;{[()]}&quot;都是合法的括号序列，但是&quot;(]&quot;和&quot;([)]&quot;不合法。</p>
<p>知识点：栈<br>
思路分析：方法一、结合栈的性质后进先出，遇到左括号压入栈，遇到右括号判断与栈顶元素是否匹配，若匹配则将栈顶元素弹出，不匹配则返回false，最后若栈为空，返回true；<br>
class Solution{</p>
<!-- more -->public:
<pre><code>bool isValid(string s){
    map&lt;char,char&gt; match={ {'}','{'}, {']','['}, {')','('} };
    stack&lt;char&gt; symbols;
    for(auto c:s){
        if(c=='('||c=='{'||c=='[')
            symbols.push(c);
        else{
            if(symbols.empty())
                return false;
            if(match[c]==symbols.top())
                symbols.pop();
            else
                return false;
        }        
    }
    if(symbols.empty())
        return true;
    else
        return false;
}
</code></pre>
<p>};</p>
<p>方法二：针对字符串中的每个元素，若栈为空直接压入栈，否则先判断当前字符与栈顶元素是否配对，若配对则弹出栈，若不配对就压入栈。最后若栈为空，则返回true，否则返回false；<br>
class Solution{</p>
<!-- more -->public:
<pre><code>bool isValid(string s) {
    stack&lt;char&gt; symbols;
    for(auto c:s){
        if(symbols.empty())
            symbols.push(c);
        else if(isSym(symbols.top(),c))
            symbols.pop();
            else   
                symbols.push(c);
    }
    return symbols.size()==0;
}
</code></pre>
<!-- more -->private:
<pre><code>bool isSym(char c1,char c2){
    return (c1=='(' &amp;&amp; c2==')') || (c1=='[' &amp;&amp; c2==']') || (c1=='{' &amp;&amp; c2=='}');
}
</code></pre>
<p>};</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://wtingfeng.github.io/post/hello-gridea/</id>
        <link href="https://wtingfeng.github.io/post/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>