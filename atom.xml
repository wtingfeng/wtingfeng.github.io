<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://wtingfeng.github.io</id>
    <title>菜菜成长之路</title>
    <updated>2020-07-30T02:38:09.857Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://wtingfeng.github.io"/>
    <link rel="self" href="https://wtingfeng.github.io/atom.xml"/>
    <subtitle>小冯学习笔记</subtitle>
    <logo>https://wtingfeng.github.io/images/avatar.png</logo>
    <icon>https://wtingfeng.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, 菜菜成长之路</rights>
    <entry>
        <title type="html"><![CDATA[18、最小栈]]></title>
        <id>https://wtingfeng.github.io/post/18zui-xiao-zhan/</id>
        <link href="https://wtingfeng.github.io/post/18zui-xiao-zhan/">
        </link>
        <updated>2020-07-30T02:18:58.000Z</updated>
        <summary type="html"><![CDATA[<p>题目描述：设计一个支持 push ，pop ，top 操作，并能在常数时间内检索到最小元素的栈。push(x) —— 将元素 x 推入栈中。pop() —— 删除栈顶的元素。top() —— 获取栈顶元素。getMin() —— 检索栈中的最小元素。</p>
]]></summary>
        <content type="html"><![CDATA[<p>题目描述：设计一个支持 push ，pop ，top 操作，并能在常数时间内检索到最小元素的栈。push(x) —— 将元素 x 推入栈中。pop() —— 删除栈顶的元素。top() —— 获取栈顶元素。getMin() —— 检索栈中的最小元素。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[17、从前序和中序遍历序列构造二叉树]]></title>
        <id>https://wtingfeng.github.io/post/17cong-qian-xu-he-zhong-xu-bian-li-xu-lie-gou-zao-er-cha-shu/</id>
        <link href="https://wtingfeng.github.io/post/17cong-qian-xu-he-zhong-xu-bian-li-xu-lie-gou-zao-er-cha-shu/">
        </link>
        <updated>2020-07-29T14:19:18.000Z</updated>
        <summary type="html"><![CDATA[<p>题目描述：根据一棵树的前序遍历和中序遍历构造二叉树。</p>
]]></summary>
        <content type="html"><![CDATA[<p>题目描述：根据一棵树的前序遍历和中序遍历构造二叉树。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[16、归并排序]]></title>
        <id>https://wtingfeng.github.io/post/16gui-bing-pai-xu/</id>
        <link href="https://wtingfeng.github.io/post/16gui-bing-pai-xu/">
        </link>
        <updated>2020-07-28T15:39:44.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[15、回文链表]]></title>
        <id>https://wtingfeng.github.io/post/15hui-wen-lian-biao/</id>
        <link href="https://wtingfeng.github.io/post/15hui-wen-lian-biao/">
        </link>
        <updated>2020-07-14T07:06:08.000Z</updated>
        <summary type="html"><![CDATA[<p>题目描述：请判断一个链表是否为回文链表。<br>
如 输入：1-&gt;2   输出：false<br>
输入：1-&gt;2-&gt;2-&gt;1  输出：true</p>
]]></summary>
        <content type="html"><![CDATA[<p>题目描述：请判断一个链表是否为回文链表。<br>
如 输入：1-&gt;2   输出：false<br>
输入：1-&gt;2-&gt;2-&gt;1  输出：true</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[14、链表从m到n反转]]></title>
        <id>https://wtingfeng.github.io/post/14lian-biao-cong-m-dao-n-fan-zhuan/</id>
        <link href="https://wtingfeng.github.io/post/14lian-biao-cong-m-dao-n-fan-zhuan/">
        </link>
        <updated>2020-07-14T02:25:36.000Z</updated>
        <summary type="html"><![CDATA[<p>题目描述：将一个链表从m位置反向到n，并在一个通道内完成。例如:<br>
给定1 - &gt; 2 - &gt; 3 - &gt; 4 - &gt; 5 - &gt; NULL,m = 2和n = 4<br>
返回1 - &gt; 4 - &gt; 3 - &gt; 2 - &gt; 5 - &gt; NULL<br>
注意:给定m, n满足以下条件:1 ≤ m ≤ n ≤ 链表长度</p>
]]></summary>
        <content type="html"><![CDATA[<p>题目描述：将一个链表从m位置反向到n，并在一个通道内完成。例如:<br>
给定1 - &gt; 2 - &gt; 3 - &gt; 4 - &gt; 5 - &gt; NULL,m = 2和n = 4<br>
返回1 - &gt; 4 - &gt; 3 - &gt; 2 - &gt; 5 - &gt; NULL<br>
注意:给定m, n满足以下条件:1 ≤ m ≤ n ≤ 链表长度</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[13、X的平方根]]></title>
        <id>https://wtingfeng.github.io/post/x-de-ping-fang-gen/</id>
        <link href="https://wtingfeng.github.io/post/x-de-ping-fang-gen/">
        </link>
        <updated>2020-07-12T09:35:16.000Z</updated>
        <summary type="html"><![CDATA[<p>题目描述：实现 int sqrt(int x) 函数。计算并返回 x 的平方根，其中 x 是非负整数。由于返回类型是整数，结果只保留整数的部分，小数部分将被舍去。</p>
]]></summary>
        <content type="html"><![CDATA[<p>题目描述：实现 int sqrt(int x) 函数。计算并返回 x 的平方根，其中 x 是非负整数。由于返回类型是整数，结果只保留整数的部分，小数部分将被舍去。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[12、二维数组中的查找]]></title>
        <id>https://wtingfeng.github.io/post/er-wei-shu-zu-zhong-de-cha-zhao/</id>
        <link href="https://wtingfeng.github.io/post/er-wei-shu-zu-zhong-de-cha-zhao/">
        </link>
        <updated>2020-07-12T05:59:46.000Z</updated>
        <summary type="html"><![CDATA[<p>题目描述：在一个二维数组中（每个一维数组的长度相同），每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。请完成一个函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。</p>
]]></summary>
        <content type="html"><![CDATA[<p>题目描述：在一个二维数组中（每个一维数组的长度相同），每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。请完成一个函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[11、二叉搜索树的第K个结点]]></title>
        <id>https://wtingfeng.github.io/post/er-cha-sou-suo-shu-de-di-k-ge-jie-dian/</id>
        <link href="https://wtingfeng.github.io/post/er-cha-sou-suo-shu-de-di-k-ge-jie-dian/">
        </link>
        <updated>2020-07-12T03:24:25.000Z</updated>
        <summary type="html"><![CDATA[<p>题目描述：给定一棵二叉搜索树，请找出其中的第k小的结点。例如， （5，3，7，2，4，6，8）    中，按结点数值大小顺序第三小结点的值为4。</p>
]]></summary>
        <content type="html"><![CDATA[<p>题目描述：给定一棵二叉搜索树，请找出其中的第k小的结点。例如， （5，3，7，2，4，6，8）    中，按结点数值大小顺序第三小结点的值为4。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[10、反转链表]]></title>
        <id>https://wtingfeng.github.io/post/10fan-zhuan-lian-biao/</id>
        <link href="https://wtingfeng.github.io/post/10fan-zhuan-lian-biao/">
        </link>
        <updated>2020-07-03T03:05:03.000Z</updated>
        <summary type="html"><![CDATA[<p>题目描述：定义一个函数，输入一个链表的头节点，反转该链表并输出反转后链表的头节点。</p>
]]></summary>
        <content type="html"><![CDATA[<p>题目描述：定义一个函数，输入一个链表的头节点，反转该链表并输出反转后链表的头节点。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[9、K个一组反转链表]]></title>
        <id>https://wtingfeng.github.io/post/9k-ge-yi-zu-fan-zhuan-lian-biao/</id>
        <link href="https://wtingfeng.github.io/post/9k-ge-yi-zu-fan-zhuan-lian-biao/">
        </link>
        <updated>2020-07-03T02:54:18.000Z</updated>
        <summary type="html"><![CDATA[<p>题目描述：给你一个链表，每 k 个节点一组进行反转，请你返回反转后的链表。k 是一个正整数，它的值小于或等于链表的长度。如果节点总数不是 k 的整数倍，那么请将最后剩余的节点保持原有顺序。</p>
]]></summary>
        <content type="html"><![CDATA[<p>题目描述：给你一个链表，每 k 个节点一组进行反转，请你返回反转后的链表。k 是一个正整数，它的值小于或等于链表的长度。如果节点总数不是 k 的整数倍，那么请将最后剩余的节点保持原有顺序。</p>
]]></content>
    </entry>
</feed>